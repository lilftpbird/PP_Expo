# Generated by Django 4.2.7 on 2025-06-02 23:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('company', models.CharField(blank=True, max_length=200, verbose_name='Компания')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('in_progress', 'В обработке'), ('resolved', 'Решено'), ('closed', 'Закрыто')], default='new', max_length=20, verbose_name='Статус')),
                ('admin_response', models.TextField(blank=True, verbose_name='Ответ администратора')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата ответа')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID объекта')),
                ('notes', models.TextField(blank=True, verbose_name='Заметки')),
                ('tags', models.CharField(blank=True, max_length=200, verbose_name='Теги')),
                ('reminder_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата напоминания')),
                ('is_reminded', models.BooleanField(default=False, verbose_name='Напоминание отправлено')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='favorite',
            name='content_type',
        ),
        migrations.RemoveField(
            model_name='favorite',
            name='user',
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='review',
            name='exhibition',
        ),
        migrations.RemoveField(
            model_name='review',
            name='moderated_by',
        ),
        migrations.RemoveField(
            model_name='review',
            name='user',
        ),
        migrations.AddField(
            model_name='analytics',
            name='browser',
            field=models.CharField(blank=True, max_length=50, verbose_name='Браузер'),
        ),
        migrations.AddField(
            model_name='analytics',
            name='city',
            field=models.CharField(blank=True, max_length=100, verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='analytics',
            name='country',
            field=models.CharField(blank=True, max_length=100, verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='analytics',
            name='device_type',
            field=models.CharField(blank=True, max_length=20, verbose_name='Тип устройства'),
        ),
        migrations.AddField(
            model_name='analytics',
            name='os',
            field=models.CharField(blank=True, max_length=50, verbose_name='Операционная система'),
        ),
        migrations.AddField(
            model_name='notification',
            name='action_text',
            field=models.CharField(blank=True, max_length=50, verbose_name='Текст кнопки действия'),
        ),
        migrations.AddField(
            model_name='notification',
            name='action_url',
            field=models.URLField(blank=True, verbose_name='Ссылка для действия'),
        ),
        migrations.AddField(
            model_name='notification',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Срок действия'),
        ),
        migrations.AddField(
            model_name='notification',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, verbose_name='Дополнительные данные'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Доступна через API без авторизации', verbose_name='Публичная настройка'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='setting_type',
            field=models.CharField(choices=[('string', 'Строка'), ('integer', 'Число'), ('boolean', 'Логическое значение'), ('json', 'JSON'), ('text', 'Текст')], default='string', max_length=20, verbose_name='Тип настройки'),
        ),
        migrations.AddField(
            model_name='viewhistory',
            name='referrer',
            field=models.URLField(blank=True, verbose_name='Источник перехода'),
        ),
        migrations.AddField(
            model_name='viewhistory',
            name='session_key',
            field=models.CharField(blank=True, max_length=40, verbose_name='Ключ сессии'),
        ),
        migrations.AlterField(
            model_name='analytics',
            name='event_type',
            field=models.CharField(choices=[('view', 'Просмотр'), ('click', 'Клик'), ('contact', 'Обращение'), ('favorite', 'Добавление в избранное'), ('share', 'Поделиться'), ('search', 'Поиск'), ('download', 'Скачивание'), ('registration', 'Регистрация')], max_length=20, verbose_name='Тип события'),
        ),
        migrations.AlterField(
            model_name='notification',
            name='type',
            field=models.CharField(choices=[('info', 'Информация'), ('success', 'Успех'), ('warning', 'Предупреждение'), ('error', 'Ошибка'), ('subscription', 'Подписка'), ('moderation', 'Модерация'), ('reminder', 'Напоминание'), ('promotion', 'Акция')], default='info', max_length=20, verbose_name='Тип'),
        ),
        migrations.AlterField(
            model_name='viewhistory',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='view_history', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddIndex(
            model_name='analytics',
            index=models.Index(fields=['user'], name='core_analyt_user_id_10f5cd_idx'),
        ),
        migrations.AddIndex(
            model_name='analytics',
            index=models.Index(fields=['session_key'], name='core_analyt_session_42677c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['type'], name='core_notifi_type_2da3a2_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='core_notifi_expires_084cc5_idx'),
        ),
        migrations.AddIndex(
            model_name='viewhistory',
            index=models.Index(fields=['session_key'], name='core_viewhi_session_d3fab3_idx'),
        ),
        migrations.DeleteModel(
            name='Favorite',
        ),
        migrations.DeleteModel(
            name='Review',
        ),
        migrations.AddField(
            model_name='contactmessage',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тип объекта'),
        ),
        migrations.AddField(
            model_name='contactmessage',
            name='responded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responded_messages', to=settings.AUTH_USER_MODEL, verbose_name='Ответил'),
        ),
        migrations.AddField(
            model_name='contactmessage',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contact_messages', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddIndex(
            model_name='contactmessage',
            index=models.Index(fields=['user', 'content_type'], name='core_contac_user_id_918de6_idx'),
        ),
        migrations.AddIndex(
            model_name='contactmessage',
            index=models.Index(fields=['content_type', 'object_id'], name='core_contac_content_22c310_idx'),
        ),
        migrations.AddIndex(
            model_name='contactmessage',
            index=models.Index(fields=['-created_at'], name='core_contac_created_25856d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contactmessage',
            unique_together={('user', 'content_type', 'object_id')},
        ),
    ]
