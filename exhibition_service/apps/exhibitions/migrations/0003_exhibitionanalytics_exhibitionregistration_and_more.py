# Generated by Django 4.2.7 on 2025-06-02 23:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('exhibitions', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExhibitionAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('views', 'Просмотры'), ('registrations', 'Регистрации'), ('favorites', 'Добавления в избранное'), ('document_downloads', 'Скачивания документов'), ('website_clicks', 'Клики на сайт'), ('contact_clicks', 'Клики на контакты')], max_length=20, verbose_name='Тип метрики')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Значение')),
                ('date', models.DateField(verbose_name='Дата')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='Источник')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Аналитика выставки',
                'verbose_name_plural': 'Аналитика выставок',
                'db_table': 'exhibition_analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Компания')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('registration_type', models.CharField(choices=[('visitor', 'Посетитель'), ('exhibitor', 'Экспонент'), ('speaker', 'Спикер'), ('press', 'Пресса'), ('vip', 'VIP')], default='visitor', max_length=20, verbose_name='Тип регистрации')),
                ('status', models.CharField(choices=[('pending', 'Ожидает подтверждения'), ('confirmed', 'Подтвержден'), ('cancelled', 'Отменен'), ('attended', 'Посетил'), ('no_show', 'Не явился')], default='pending', max_length=20, verbose_name='Статус')),
                ('interests', models.TextField(blank=True, verbose_name='Интересы/Цели посещения')),
                ('dietary_requirements', models.CharField(blank=True, max_length=200, verbose_name='Диетические требования')),
                ('accessibility_needs', models.CharField(blank=True, max_length=200, verbose_name='Потребности в доступности')),
                ('qr_code', models.CharField(blank=True, max_length=100, unique=True, verbose_name='QR код')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата подтверждения')),
                ('attended_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата посещения')),
                ('check_in_notes', models.TextField(blank=True, verbose_name='Заметки при регистрации')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='Источник регистрации')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Регистрация на выставку',
                'verbose_name_plural': 'Регистрации на выставки',
                'db_table': 'exhibition_registrations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название мероприятия')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('event_type', models.CharField(choices=[('opening', 'Торжественное открытие'), ('presentation', 'Презентация'), ('seminar', 'Семинар'), ('workshop', 'Мастер-класс'), ('panel', 'Панельная дискуссия'), ('networking', 'Нетворкинг'), ('break', 'Перерыв'), ('lunch', 'Обед'), ('closing', 'Закрытие'), ('other', 'Другое')], default='other', max_length=20, verbose_name='Тип мероприятия')),
                ('start_time', models.DateTimeField(verbose_name='Время начала')),
                ('end_time', models.DateTimeField(verbose_name='Время окончания')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Место проведения')),
                ('room', models.CharField(blank=True, max_length=100, verbose_name='Зал/Комната')),
                ('max_attendees', models.PositiveIntegerField(blank=True, null=True, verbose_name='Максимум участников')),
                ('registration_required', models.BooleanField(default=False, verbose_name='Требуется регистрация')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемое')),
                ('online_link', models.URLField(blank=True, verbose_name='Ссылка на онлайн-трансляцию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Событие расписания',
                'verbose_name_plural': 'Расписание выставки',
                'db_table': 'exhibition_schedule',
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionSpeaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Звание/Степень')),
                ('bio', models.TextField(verbose_name='Биография')),
                ('company', models.CharField(blank=True, max_length=200, verbose_name='Компания')),
                ('position', models.CharField(blank=True, max_length=200, verbose_name='Должность')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('photo', models.ImageField(blank=True, help_text='Рекомендуемый размер: 300x300 пикселей', null=True, upload_to='speakers/', verbose_name='Фотография')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter')),
                ('is_keynote', models.BooleanField(default=False, verbose_name='Ключевой спикер')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Спикер выставки',
                'verbose_name_plural': 'Спикеры выставки',
                'db_table': 'exhibition_speakers',
                'ordering': ['sort_order', 'last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionSponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('sponsor_type', models.CharField(choices=[('title', 'Титульный спонсор'), ('general', 'Генеральный спонсор'), ('official', 'Официальный спонсор'), ('partner', 'Партнер'), ('media', 'Медиа-партнер'), ('tech', 'Технический партнер'), ('supporter', 'Поддерживающий партнер')], default='partner', max_length=20, verbose_name='Тип спонсорства')),
                ('logo', models.ImageField(help_text='Рекомендуемый размер: 300x150 пикселей', upload_to='sponsors/', verbose_name='Логотип')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Контактный email')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_featured', models.BooleanField(default=True, verbose_name='Показывать на главной')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Спонсор выставки',
                'verbose_name_plural': 'Спонсоры выставки',
                'db_table': 'exhibition_sponsors',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='Цвет')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Тег выставки',
                'verbose_name_plural': 'Теги выставок',
                'db_table': 'exhibition_tags',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='exhibition',
            options={'ordering': ['-start_date'], 'verbose_name': 'Выставка', 'verbose_name_plural': 'Выставки'},
        ),
        migrations.AlterModelOptions(
            name='favoriteexhibition',
            options={'ordering': ['-created_at'], 'verbose_name': 'Избранная выставка', 'verbose_name_plural': 'Избранные выставки'},
        ),
        migrations.AddField(
            model_name='category',
            name='banner_image',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 1200x300 пикселей', null=True, upload_to='category_banners/', verbose_name='Баннер категории'),
        ),
        migrations.AddField(
            model_name='category',
            name='color',
            field=models.CharField(default='#6c757d', max_length=7, verbose_name='Цвет'),
        ),
        migrations.AddField(
            model_name='category',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Рекомендуемая'),
        ),
        migrations.AddField(
            model_name='category',
            name='meta_description',
            field=models.CharField(blank=True, max_length=160, verbose_name='META описание'),
        ),
        migrations.AddField(
            model_name='category',
            name='meta_title',
            field=models.CharField(blank=True, max_length=60, verbose_name='META заголовок'),
        ),
        migrations.AddField(
            model_name='category',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='exhibitions.category', verbose_name='Родительская категория'),
        ),
        migrations.AddField(
            model_name='category',
            name='short_description',
            field=models.CharField(blank=True, max_length=200, verbose_name='Краткое описание'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='additional_categories',
            field=models.ManyToManyField(blank=True, related_name='additional_exhibitions', to='exhibitions.category', verbose_name='Дополнительные категории'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='co_organizers',
            field=models.ManyToManyField(blank=True, related_name='co_organized_exhibitions', to=settings.AUTH_USER_MODEL, verbose_name='Соорганизаторы'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='currency',
            field=models.CharField(default='RUB', max_length=3, verbose_name='Валюта'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='dress_code',
            field=models.CharField(blank=True, max_length=200, verbose_name='Дресс-код'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='exhibition_type',
            field=models.CharField(choices=[('trade_show', 'Торговая выставка'), ('conference', 'Конференция'), ('seminar', 'Семинар'), ('workshop', 'Воркшоп'), ('networking', 'Нетворкинг'), ('expo', 'Экспо'), ('fair', 'Ярмарка'), ('forum', 'Форум'), ('congress', 'Конгресс'), ('symposium', 'Симпозиум')], default='trade_show', max_length=20, verbose_name='Тип мероприятия'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='exhibitor_fee',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Стоимость для экспонентов'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='format',
            field=models.CharField(choices=[('offline', 'Очный'), ('online', 'Онлайн'), ('hybrid', 'Гибридный')], default='offline', max_length=20, verbose_name='Формат проведения'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='is_premium',
            field=models.BooleanField(default=False, verbose_name='Премиум размещение'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='is_recurring',
            field=models.BooleanField(default=False, verbose_name='Регулярное мероприятие'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='max_exhibitors',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Максимальное количество экспонентов'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='meeting_id',
            field=models.CharField(blank=True, max_length=100, verbose_name='ID встречи'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='meeting_password',
            field=models.CharField(blank=True, max_length=100, verbose_name='Пароль встречи'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='min_age',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Минимальный возраст'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='moderated_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата модерации'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='moderated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_exhibitions', to=settings.AUTH_USER_MODEL, verbose_name='Модератор'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='online_link',
            field=models.URLField(blank=True, verbose_name='Ссылка на мероприятие'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='online_platform',
            field=models.CharField(blank=True, max_length=100, verbose_name='Платформа'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='postal_code',
            field=models.CharField(blank=True, max_length=10, verbose_name='Почтовый индекс'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='rating',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='region',
            field=models.CharField(blank=True, max_length=100, verbose_name='Регион/Область'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='registration_start',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Начало регистрации'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='registrations_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество регистраций'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='requirements',
            field=models.TextField(blank=True, verbose_name='Требования к участникам'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='reviews_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество отзывов'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='venue_description',
            field=models.TextField(blank=True, verbose_name='Описание площадки'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='visitor_fee',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Стоимость для посетителей'),
        ),
        migrations.AddField(
            model_name='exhibitiondocument',
            name='description',
            field=models.TextField(blank=True, verbose_name='Описание'),
        ),
        migrations.AddField(
            model_name='exhibitiondocument',
            name='document_type',
            field=models.CharField(choices=[('program', 'Программа мероприятия'), ('presentation', 'Презентация'), ('brochure', 'Брошюра'), ('price_list', 'Прайс-лист'), ('regulations', 'Регламент'), ('contract', 'Договор'), ('other', 'Другое')], default='other', max_length=20, verbose_name='Тип документа'),
        ),
        migrations.AddField(
            model_name='exhibitiondocument',
            name='is_public',
            field=models.BooleanField(default=True, verbose_name='Публичный доступ'),
        ),
        migrations.AddField(
            model_name='exhibitionimage',
            name='title',
            field=models.CharField(blank=True, max_length=200, verbose_name='Название'),
        ),
        migrations.AddField(
            model_name='favoriteexhibition',
            name='is_reminded',
            field=models.BooleanField(default=False, verbose_name='Напоминание отправлено'),
        ),
        migrations.AddField(
            model_name='favoriteexhibition',
            name='notes',
            field=models.TextField(blank=True, verbose_name='Заметки'),
        ),
        migrations.AddField(
            model_name='favoriteexhibition',
            name='reminder_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата напоминания'),
        ),
        migrations.AlterField(
            model_name='category',
            name='icon',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 64x64 пикселя', null=True, upload_to='category_icons/', verbose_name='Иконка категории'),
        ),
        migrations.AlterField(
            model_name='category',
            name='name',
            field=models.CharField(db_index=True, max_length=100, verbose_name='Название категории'),
        ),
        migrations.AlterField(
            model_name='exhibition',
            name='banner_image',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 1200x400 пикселей', null=True, upload_to='exhibition_banners/', verbose_name='Баннер'),
        ),
        migrations.AlterField(
            model_name='exhibition',
            name='logo',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 300x300 пикселей', null=True, upload_to='exhibition_logos/', verbose_name='Логотип выставки'),
        ),
        migrations.AlterField(
            model_name='exhibition',
            name='status',
            field=models.CharField(choices=[('draft', 'Черновик'), ('pending', 'На рассмотрении'), ('approved', 'Одобрено'), ('rejected', 'Отклонено'), ('requires_changes', 'Требуются изменения'), ('published', 'Опубликовано'), ('cancelled', 'Отменено'), ('completed', 'Завершено')], default='draft', max_length=20, verbose_name='Статус'),
        ),
        migrations.AlterField(
            model_name='exhibition',
            name='title',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Название выставки'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['slug'], name='categories_slug_b4303a_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active', 'sort_order'], name='categories_is_acti_3acc57_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='categories_parent__7983b2_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['title'], name='exhibitions_title_da67f7_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['slug'], name='exhibitions_slug_5196a9_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['status'], name='exhibitions_status_7e7bc4_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['category'], name='exhibitions_categor_c8dbb7_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['start_date', 'end_date'], name='exhibitions_start_d_9e91a6_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['city', 'country'], name='exhibitions_city_326818_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['-views_count'], name='exhibitions_views_c_04120f_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['-rating'], name='exhibitions_rating_ef5d81_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibition',
            index=models.Index(fields=['-created_at'], name='exhibitions_created_b9c66f_idx'),
        ),
        migrations.AddField(
            model_name='exhibitionsponsor',
            name='exhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sponsors', to='exhibitions.exhibition', verbose_name='Выставка'),
        ),
        migrations.AddField(
            model_name='exhibitionspeaker',
            name='exhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='speakers', to='exhibitions.exhibition', verbose_name='Выставка'),
        ),
        migrations.AddField(
            model_name='exhibitionschedule',
            name='exhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='exhibitions.exhibition', verbose_name='Выставка'),
        ),
        migrations.AddField(
            model_name='exhibitionschedule',
            name='speakers',
            field=models.ManyToManyField(blank=True, related_name='schedule_events', to='exhibitions.exhibitionspeaker', verbose_name='Спикеры'),
        ),
        migrations.AddField(
            model_name='exhibitionregistration',
            name='exhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='exhibitions.exhibition', verbose_name='Выставка'),
        ),
        migrations.AddField(
            model_name='exhibitionregistration',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exhibition_registrations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='exhibitionanalytics',
            name='exhibition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='exhibitions.exhibition', verbose_name='Выставка'),
        ),
        migrations.AddField(
            model_name='exhibition',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='exhibitions', to='exhibitions.exhibitiontag', verbose_name='Теги'),
        ),
        migrations.AddIndex(
            model_name='exhibitionregistration',
            index=models.Index(fields=['exhibition', 'status'], name='exhibition__exhibit_ac6511_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionregistration',
            index=models.Index(fields=['user'], name='exhibition__user_id_d64f7f_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionregistration',
            index=models.Index(fields=['email'], name='exhibition__email_93c333_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionregistration',
            index=models.Index(fields=['qr_code'], name='exhibition__qr_code_d3d54a_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionregistration',
            index=models.Index(fields=['-created_at'], name='exhibition__created_e60d19_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exhibitionregistration',
            unique_together={('exhibition', 'email')},
        ),
        migrations.AddIndex(
            model_name='exhibitionanalytics',
            index=models.Index(fields=['exhibition', 'metric_type'], name='exhibition__exhibit_7da4e4_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionanalytics',
            index=models.Index(fields=['date'], name='exhibition__date_324c25_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionanalytics',
            index=models.Index(fields=['-created_at'], name='exhibition__created_491be1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='exhibitionanalytics',
            unique_together={('exhibition', 'metric_type', 'date')},
        ),
    ]
