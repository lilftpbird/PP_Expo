# Generated by Django 4.2.7 on 2025-06-02 23:11

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('companies', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('views', 'Просмотры'), ('contacts', 'Обращения'), ('favorites', 'Добавления в избранное'), ('product_views', 'Просмотры продуктов'), ('reviews', 'Отзывы'), ('clicks', 'Клики по ссылкам')], max_length=20, verbose_name='Тип метрики')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='Значение')),
                ('date', models.DateField(verbose_name='Дата')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='Источник')),
                ('user_agent', models.CharField(blank=True, max_length=255, verbose_name='User Agent')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Аналитика компании',
                'verbose_name_plural': 'Аналитика компаний',
                'db_table': 'company_analytics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CompanyCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('certificate_type', models.CharField(choices=[('iso', 'ISO стандарт'), ('quality', 'Сертификат качества'), ('safety', 'Сертификат безопасности'), ('award', 'Награда'), ('accreditation', 'Аккредитация'), ('other', 'Другое')], default='other', max_length=20, verbose_name='Тип')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='company_certificates/', verbose_name='Файл сертификата')),
                ('image', models.ImageField(blank=True, null=True, upload_to='company_certificates/images/', verbose_name='Изображение')),
                ('issuer', models.CharField(blank=True, max_length=200, verbose_name='Выдан')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Срок действия')),
                ('certificate_number', models.CharField(blank=True, max_length=100, verbose_name='Номер сертификата')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_featured', models.BooleanField(default=True, verbose_name='Показывать в профиле')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сертификат компании',
                'verbose_name_plural': 'Сертификаты компании',
                'db_table': 'company_certificates',
                'ordering': ['sort_order', '-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='CompanyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Компания')),
                ('contact_type', models.CharField(choices=[('general', 'Общий вопрос'), ('product', 'О продукте/услуге'), ('partnership', 'Сотрудничество'), ('support', 'Техническая поддержка'), ('complaint', 'Жалоба'), ('other', 'Другое')], default='general', max_length=20, verbose_name='Тип обращения')),
                ('subject', models.CharField(max_length=200, verbose_name='Тема')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('status', models.CharField(choices=[('new', 'Новое'), ('in_progress', 'В обработке'), ('replied', 'Отвечено'), ('closed', 'Закрыто')], default='new', max_length=20, verbose_name='Статус')),
                ('reply_message', models.TextField(blank=True, verbose_name='Ответ')),
                ('replied_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата ответа')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Обращение к компании',
                'verbose_name_plural': 'Обращения к компаниям',
                'db_table': 'company_contacts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='company_gallery/', verbose_name='Изображение')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Изображение галереи',
                'verbose_name_plural': 'Галерея компании',
                'db_table': 'company_gallery',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('color', models.CharField(default='#6c757d', max_length=7, verbose_name='Цвет')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Тег компании',
                'verbose_name_plural': 'Теги компаний',
                'db_table': 'company_tags',
                'ordering': ['name'],
            },
        ),
        migrations.AlterModelOptions(
            name='company',
            options={'ordering': ['-created_at'], 'verbose_name': 'Компания', 'verbose_name_plural': 'Компании'},
        ),
        migrations.AlterModelOptions(
            name='companyproduct',
            options={'ordering': ['sort_order', 'name'], 'verbose_name': 'Продукт компании', 'verbose_name_plural': 'Продукты компании'},
        ),
        migrations.AlterModelOptions(
            name='favoritecompany',
            options={'ordering': ['-created_at'], 'verbose_name': 'Избранная компания', 'verbose_name_plural': 'Избранные компании'},
        ),
        migrations.AddField(
            model_name='company',
            name='annual_revenue',
            field=models.CharField(blank=True, max_length=100, verbose_name='Годовой оборот'),
        ),
        migrations.AddField(
            model_name='company',
            name='contact_requests_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество обращений'),
        ),
        migrations.AddField(
            model_name='company',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Рекомендуемая'),
        ),
        migrations.AddField(
            model_name='company',
            name='is_premium',
            field=models.BooleanField(default=False, verbose_name='Премиум размещение'),
        ),
        migrations.AddField(
            model_name='company',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Широта'),
        ),
        migrations.AddField(
            model_name='company',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Долгота'),
        ),
        migrations.AddField(
            model_name='company',
            name='moderated_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата модерации'),
        ),
        migrations.AddField(
            model_name='company',
            name='moderated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_companies', to=settings.AUTH_USER_MODEL, verbose_name='Модератор'),
        ),
        migrations.AddField(
            model_name='company',
            name='moderation_notes',
            field=models.TextField(blank=True, verbose_name='Заметки модератора'),
        ),
        migrations.AddField(
            model_name='company',
            name='postal_code',
            field=models.CharField(blank=True, max_length=10, verbose_name='Почтовый индекс'),
        ),
        migrations.AddField(
            model_name='company',
            name='published_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации'),
        ),
        migrations.AddField(
            model_name='company',
            name='rating',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг'),
        ),
        migrations.AddField(
            model_name='company',
            name='region',
            field=models.CharField(blank=True, max_length=100, verbose_name='Регион/Область'),
        ),
        migrations.AddField(
            model_name='company',
            name='reviews_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество отзывов'),
        ),
        migrations.AddField(
            model_name='company',
            name='status',
            field=models.CharField(choices=[('draft', 'Черновик'), ('pending', 'На модерации'), ('approved', 'Одобрено'), ('rejected', 'Отклонено'), ('active', 'Активно'), ('suspended', 'Приостановлено')], default='draft', max_length=20, verbose_name='Статус'),
        ),
        migrations.AddField(
            model_name='company',
            name='telegram_url',
            field=models.URLField(blank=True, verbose_name='Telegram'),
        ),
        migrations.AddField(
            model_name='company',
            name='youtube_url',
            field=models.URLField(blank=True, verbose_name='YouTube'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='currency',
            field=models.CharField(default='RUB', max_length=3, verbose_name='Валюта'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='datasheet_url',
            field=models.URLField(blank=True, verbose_name='Техническая документация'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='inquiries_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Запросы'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Активен'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='is_featured',
            field=models.BooleanField(default=False, verbose_name='Рекомендуемый'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='price',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Цена'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='product_type',
            field=models.CharField(choices=[('product', 'Продукт'), ('service', 'Услуга'), ('software', 'Программное обеспечение'), ('equipment', 'Оборудование'), ('material', 'Материал'), ('other', 'Другое')], default='product', max_length=20, verbose_name='Тип'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='short_description',
            field=models.CharField(blank=True, max_length=200, verbose_name='Краткое описание'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='slug',
            field=models.SlugField(blank=True, max_length=200, verbose_name='Slug'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='sort_order',
            field=models.PositiveIntegerField(default=0, verbose_name='Порядок сортировки'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='specifications',
            field=models.JSONField(blank=True, default=dict, verbose_name='Технические характеристики'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='views_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Просмотры'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='helpful_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Полезен'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='moderated_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата модерации'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='moderated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_company_reviews', to=settings.AUTH_USER_MODEL, verbose_name='Модератор'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='not_helpful_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Не полезен'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='price_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 звезда'), (2, '2 звезды'), (3, '3 звезды'), (4, '4 звезды'), (5, '5 звезд')], null=True, verbose_name='Соотношение цена/качество'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='quality_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 звезда'), (2, '2 звезды'), (3, '3 звезды'), (4, '4 звезды'), (5, '5 звезд')], null=True, verbose_name='Качество продукции'),
        ),
        migrations.AddField(
            model_name='companyreview',
            name='service_rating',
            field=models.IntegerField(blank=True, choices=[(1, '1 звезда'), (2, '2 звезды'), (3, '3 звезды'), (4, '4 звезды'), (5, '5 звезд')], null=True, verbose_name='Качество обслуживания'),
        ),
        migrations.AddField(
            model_name='exhibitionparticipant',
            name='booth_description',
            field=models.TextField(blank=True, verbose_name='Описание стенда'),
        ),
        migrations.AddField(
            model_name='exhibitionparticipant',
            name='featured_products',
            field=models.ManyToManyField(blank=True, related_name='exhibitions', to='companies.companyproduct', verbose_name='Демонстрируемые продукты'),
        ),
        migrations.AddField(
            model_name='favoritecompany',
            name='is_reminded',
            field=models.BooleanField(default=False, verbose_name='Напоминание отправлено'),
        ),
        migrations.AddField(
            model_name='favoritecompany',
            name='notes',
            field=models.TextField(blank=True, verbose_name='Заметки'),
        ),
        migrations.AddField(
            model_name='favoritecompany',
            name='reminder_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата напоминания'),
        ),
        migrations.AlterField(
            model_name='company',
            name='banner_image',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 1200x400 пикселей', null=True, upload_to='company_banners/', verbose_name='Баннер компании'),
        ),
        migrations.AlterField(
            model_name='company',
            name='company_size',
            field=models.CharField(blank=True, choices=[('startup', 'Стартап (до 10 сотрудников)'), ('small', 'Малая (10-50 сотрудников)'), ('medium', 'Средняя (50-250 сотрудников)'), ('large', 'Крупная (250-1000 сотрудников)'), ('enterprise', 'Корпорация (1000+ сотрудников)')], max_length=20, verbose_name='Размер компании'),
        ),
        migrations.AlterField(
            model_name='company',
            name='founded_year',
            field=models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2025)], verbose_name='Год основания'),
        ),
        migrations.AlterField(
            model_name='company',
            name='logo',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 300x300 пикселей', null=True, upload_to='company_logos/', verbose_name='Логотип компании'),
        ),
        migrations.AlterField(
            model_name='company',
            name='name',
            field=models.CharField(db_index=True, max_length=200, verbose_name='Название компании'),
        ),
        migrations.AlterField(
            model_name='companyproduct',
            name='image',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 400x300 пикселей', null=True, upload_to='company_products/', verbose_name='Изображение'),
        ),
        migrations.AlterField(
            model_name='exhibitionparticipant',
            name='participation_type',
            field=models.CharField(choices=[('exhibitor', 'Экспонент'), ('sponsor', 'Спонсор'), ('partner', 'Партнер'), ('speaker', 'Спикер'), ('media', 'Медиа-партнер'), ('organizer', 'Соорганизатор')], default='exhibitor', max_length=20, verbose_name='Тип участия'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['name'], name='companies_name_c7a1b3_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['slug'], name='companies_slug_e0676c_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['status', 'is_active'], name='companies_status_53a67b_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['category'], name='companies_categor_0b76c2_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['city', 'country'], name='companies_city_7a409f_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['-views_count'], name='companies_views_c_068a08_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['-rating'], name='companies_rating_066b97_idx'),
        ),
        migrations.AddIndex(
            model_name='company',
            index=models.Index(fields=['-created_at'], name='companies_created_bbd208_idx'),
        ),
        migrations.AddIndex(
            model_name='companyproduct',
            index=models.Index(fields=['company', 'is_active'], name='company_pro_company_31ff1d_idx'),
        ),
        migrations.AddIndex(
            model_name='companyproduct',
            index=models.Index(fields=['product_type'], name='company_pro_product_4d7f23_idx'),
        ),
        migrations.AddIndex(
            model_name='companyproduct',
            index=models.Index(fields=['sort_order'], name='company_pro_sort_or_af2cc2_idx'),
        ),
        migrations.AddIndex(
            model_name='companyreview',
            index=models.Index(fields=['company', 'is_published'], name='company_rev_company_927fa5_idx'),
        ),
        migrations.AddIndex(
            model_name='companyreview',
            index=models.Index(fields=['user'], name='company_rev_user_id_8db301_idx'),
        ),
        migrations.AddIndex(
            model_name='companyreview',
            index=models.Index(fields=['rating'], name='company_rev_rating_8c301d_idx'),
        ),
        migrations.AddIndex(
            model_name='companyreview',
            index=models.Index(fields=['-created_at'], name='company_rev_created_469f25_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionparticipant',
            index=models.Index(fields=['exhibition', 'participation_type'], name='exhibition__exhibit_74ed49_idx'),
        ),
        migrations.AddIndex(
            model_name='exhibitionparticipant',
            index=models.Index(fields=['is_featured'], name='exhibition__is_feat_937c88_idx'),
        ),
        migrations.AddField(
            model_name='companygallery',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='companies.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='companycontact',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='companies.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='companycontact',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='companies.companyproduct', verbose_name='Продукт'),
        ),
        migrations.AddField(
            model_name='companycontact',
            name='replied_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_replies', to=settings.AUTH_USER_MODEL, verbose_name='Ответил'),
        ),
        migrations.AddField(
            model_name='companycontact',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_contacts', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='companycertificate',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='companies.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='companyanalytics',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='companies.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='company',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='companies', to='companies.companytag', verbose_name='Теги'),
        ),
        migrations.AddIndex(
            model_name='companycontact',
            index=models.Index(fields=['company', 'status'], name='company_con_company_a0a25e_idx'),
        ),
        migrations.AddIndex(
            model_name='companycontact',
            index=models.Index(fields=['user'], name='company_con_user_id_5949b7_idx'),
        ),
        migrations.AddIndex(
            model_name='companycontact',
            index=models.Index(fields=['contact_type'], name='company_con_contact_62d6df_idx'),
        ),
        migrations.AddIndex(
            model_name='companycontact',
            index=models.Index(fields=['-created_at'], name='company_con_created_913f0b_idx'),
        ),
        migrations.AddIndex(
            model_name='companyanalytics',
            index=models.Index(fields=['company', 'metric_type'], name='company_ana_company_2c5595_idx'),
        ),
        migrations.AddIndex(
            model_name='companyanalytics',
            index=models.Index(fields=['date'], name='company_ana_date_11a8c7_idx'),
        ),
        migrations.AddIndex(
            model_name='companyanalytics',
            index=models.Index(fields=['-created_at'], name='company_ana_created_e45c99_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='companyanalytics',
            unique_together={('company', 'metric_type', 'date')},
        ),
    ]
