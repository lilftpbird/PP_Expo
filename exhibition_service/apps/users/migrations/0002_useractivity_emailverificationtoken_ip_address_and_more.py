# Generated by Django 4.2.7 on 2025-06-02 23:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'Вход в систему'), ('logout', 'Выход из системы'), ('profile_update', 'Обновление профиля'), ('password_change', 'Смена пароля'), ('email_verification', 'Подтверждение email'), ('exhibition_create', 'Создание выставки'), ('company_create', 'Создание компании'), ('favorite_add', 'Добавление в избранное'), ('favorite_remove', 'Удаление из избранного')], max_length=20, verbose_name='Тип активности')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Дополнительные данные')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Активность пользователя',
                'verbose_name_plural': 'Активность пользователей',
                'db_table': 'user_activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='emailverificationtoken',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес'),
        ),
        migrations.AddField(
            model_name='emailverificationtoken',
            name='used_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата использования'),
        ),
        migrations.AddField(
            model_name='passwordresettoken',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес'),
        ),
        migrations.AddField(
            model_name='passwordresettoken',
            name='used_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата использования'),
        ),
        migrations.AddField(
            model_name='user',
            name='email_notifications',
            field=models.BooleanField(default=True, verbose_name='Email уведомления'),
        ),
        migrations.AddField(
            model_name='user',
            name='email_verified_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Дата подтверждения email'),
        ),
        migrations.AddField(
            model_name='user',
            name='failed_login_attempts',
            field=models.PositiveIntegerField(default=0, verbose_name='Неудачные попытки входа'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_activity',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Последняя активность'),
        ),
        migrations.AddField(
            model_name='user',
            name='locked_until',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Заблокирован до'),
        ),
        migrations.AddField(
            model_name='user',
            name='login_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Количество входов'),
        ),
        migrations.AddField(
            model_name='user',
            name='marketing_emails',
            field=models.BooleanField(default=False, verbose_name='Маркетинговые рассылки'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='allow_messages',
            field=models.BooleanField(default=True, verbose_name='Разрешить сообщения'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='birth_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='city',
            field=models.CharField(blank=True, max_length=100, verbose_name='Город'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='country',
            field=models.CharField(blank=True, max_length=100, verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='exhibition_reminders',
            field=models.BooleanField(default=True, verbose_name='Напоминания о выставках'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='facebook_url',
            field=models.URLField(blank=True, verbose_name='Facebook'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='instagram_url',
            field=models.URLField(blank=True, verbose_name='Instagram'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='linkedin_url',
            field=models.URLField(blank=True, verbose_name='LinkedIn'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='show_email',
            field=models.BooleanField(default=False, verbose_name='Показывать email'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='show_phone',
            field=models.BooleanField(default=False, verbose_name='Показывать телефон'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='timezone',
            field=models.CharField(blank=True, default='Europe/Moscow', max_length=50, verbose_name='Часовой пояс'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='twitter_url',
            field=models.URLField(blank=True, verbose_name='Twitter'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='weekly_digest',
            field=models.BooleanField(default=True, verbose_name='Еженедельная сводка'),
        ),
        migrations.AlterField(
            model_name='emailverificationtoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verification_tokens', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='passwordresettoken',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_tokens', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='avatar',
            field=models.ImageField(blank=True, help_text='Рекомендуемый размер: 200x200 пикселей', null=True, upload_to='avatars/', verbose_name='Аватар'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='bio',
            field=models.TextField(blank=True, max_length=500, verbose_name='О себе'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['token'], name='email_verif_token_df7c5e_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['user', 'is_used'], name='email_verif_user_id_35194a_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationtoken',
            index=models.Index(fields=['expires_at'], name='email_verif_expires_770728_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['token'], name='password_re_token_060a1f_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['user', 'is_used'], name='password_re_user_id_cd37a3_idx'),
        ),
        migrations.AddIndex(
            model_name='passwordresettoken',
            index=models.Index(fields=['expires_at'], name='password_re_expires_8e96b7_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['role'], name='users_role_0ace22_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active', 'is_email_verified'], name='users_is_acti_9c2147_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='users_created_6541e9_idx'),
        ),
        migrations.AddField(
            model_name='useractivity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', '-created_at'], name='user_activi_user_id_47a698_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['activity_type'], name='user_activi_activit_534635_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['-created_at'], name='user_activi_created_5315c9_idx'),
        ),
    ]
